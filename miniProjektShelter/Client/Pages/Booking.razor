@page "/booking"
@using System.Net;
@using miniProjektShelter.Shared;
@using miniProjektShelter.Client.Services;

<NavLink class="nav-link" href="pedel">
    <span class="oi oi-home" aria-hidden="true"></span> Pedel
</NavLink>

<div style="width:80%;height:400px;display:@modalHidden;position:absolute;margin-top:10%;margin-bottom:10%;margin-left:10%;margin-right:10%">
    <div class="modal-content" style="background-color:white;height:100%">
        <h2>Du er ved at booke @valgtShalterX</h2>
        <h5><strong>Navn</strong></h5>
        <input @bind="@costumerName" />
        <h5>Email</h5>
        <input @bind="@email" />
        <h5>Telefon</h5>
        <input @bind="@number" />
        <button @onclick="(() => Send())">Send</button>
        <br />
        <button @onclick="(() => Fortryd())">Fortryd</button>
    </div>
</div>


<h1>Booking</h1>
<br />

<h4>Kommune</h4>
<label for="lang">Vælg kommune</label>
<select name="kommuneSelector" id="kommuneSelector" @bind="@selectedString" onclick="@changeShelter()">
    @foreach (var navn in KommuneList)
    {
        <option value=@navn>@navn</option>
    }
</select>

<h5>Dato</h5>
<label for="lang">Indtast dato</label>
<input type="date" value="@getCurrentDate()" max="2025-12-31" />

<h5>Antal overnatninger</h5>
<select name="antalSelectorOvernatninger" id="antalSelectorOvernatninger">
    <option value=1>1</option>
    <option value=2>2</option>
</select>

<h5>Antal personer</h5>
<select name="antalSelectorPersoner" id="antalSelectorPersoner" @bind="@selectedAntalPersoner" onclick="@changeShelter()">
    @for (int i = 0; i < 10; i++)
    {
        <option value=@i>@i</option>
    }
</select>

@if (SheltersToShow == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>KommuneNavn</th>
                <th>Navn</th>
                <th>Beskrivelse</th>
                <th>Antal pladser</th>
                <th>Handicap egnet</th>
                <th>Book</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ShelterX in SheltersToShow)
            {

                <tr>
                    <td>@ShelterX.Properties.KommuneNavn</td>
                    <td>@ShelterX.Properties.Navn</td>
                    <td>@ShelterX.Properties.Lang_beskrivelse</td>
                    <td>@ShelterX.Properties.Antal_pl</td>
                    <td>@ShelterX.Properties.Handicap</td>
                    <td><button hidden="@hide1" @onclick="(() => bookShelter(ShelterX))">Book</button></td>
                </tr>
            }
        </tbody>
    </table>
}



@code {

    private List<Shelter> SheltersList = new List<Shelter>();
    private List<string> KommuneList = new List<string>();
    private List<Shelter> SheltersToShow = new List<Shelter>();
    string selectedString = "Samsø Kommune";
    int selectedAntalPersoner = 1;
    string valgtShalterX = "";
    Shelter currentShelter = new Shelter();
    bool hide1 = false;
    string modalHidden = "none";
    string costumerName = "";
    string email = "";
    int number = new int();

    public int changeShelter()
    {
        SheltersToShow.Clear();
        foreach (Shelter shelterX in SheltersList)
        {
            if (shelterX.Properties.KommuneNavn == selectedString && shelterX.Properties.Facil_ty == "Shelter" && shelterX.Properties.Antal_pl >= selectedAntalPersoner)
            {
                SheltersToShow.Add(shelterX);
            }
        }
        return 1;
    }

    [Inject]
    public IShelterService? Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SheltersList = (await Service!.GetAllItems())!.ToList();

        foreach (Shelter shelterX in SheltersList)
        {
            if (!KommuneList.Contains(shelterX.Properties.KommuneNavn!))
            {
                KommuneList.Add(shelterX.Properties.KommuneNavn!);
            }
        }
    }
    public DateTime getCurrentDate()
    {
        return DateTime.Now;
    }

    public void bookShelter(Shelter valgtShelter)
    {
        modalHidden = "block";
        hide1 = true;
        valgtShalterX = valgtShelter.Properties.Navn!;
        currentShelter = valgtShelter;
    }

    public void Fortryd(){
        modalHidden = "none";
        hide1 = false;
    }
    public void Send(){
        CostumerBooking tmpBooking = new CostumerBooking(costumerName, email, number, 1,2, currentShelter.MongoId!);
        Service.AddItem(tmpBooking);
        
    }
}
